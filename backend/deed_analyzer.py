import datetime
import random
#------------------------------------------------------------------
# بخش شبیه‌سازی API مدل زبان بزرگ (LLM)
# در یک پروژه واقعی، این بخش باید با کد واقعی برای فراخوانی API
# مانند OpenAI (ChatGPT) جایگزین شود.
# from openai import OpenAI
# client = OpenAI(api_key="YOUR_API_KEY")
#------------------------------------------------------------------
def analyze_deed_text_with_llm(deed_text: str, prompt: str) -> bool:
    """
    این تابع یک فراخوانی به یک مدل زبان بزرگ (مانند ChatGPT) را شبیه‌سازی می‌کند.
    این تابع متن سند و یک پرامپت را به عنوان ورودی دریافت کرده و یک پاسخ بولین (True/False) برمی‌گرداند.
    Args:
        deed_text: متن کامل سند.
        prompt: پرامپتی که به مدل زبان برای تحلیل متن داده می‌شود.
    Returns:
        یک مقدار بولین که پاسخ شبیه‌سازی شده مدل زبان است.
    """
    print("==========================================================")
    print(f"  شروع تحلیل متن با مدل زبان (شبیه‌سازی شده) ")
    print("----------------------------------------------------------")
    print(f"پرامپت ارسالی به مدل:\n{prompt}")
    print("----------------------------------------------------------")
    print(f"بخشی از متن سند ارسالی:\n'{deed_text[:200]}...'")
    print("----------------------------------------------------------")
    
    # در اینجا یک پاسخ تصادفی برای شبیه‌سازی تولید می‌شود.
    # در سناریوی واقعی، پاسخ واقعی مدل زبان باید پردازش شود.
    # response = client.chat.completions.create(...)
    # if "بله" in response.choices[0].message.content:
    #     result = True
    # else:
    #     result = False
    result = random.choice([True, False])
    
    print(f"پاسخ شبیه‌سازی شده مدل: {'بله' if result else 'خیر'}")
    print("==========================================================")
    
    return result
#------------------------------------------------------------------
# تابع اصلی برای پیاده‌سازی منطق فلوچارت
#------------------------------------------------------------------
def check_deed_for_violations(deed: dict) -> str:
    """
    این تابع منطق فلوچارت را برای بررسی تخلفات احتمالی یک سند پیاده‌سازی می‌کند.
    Args:
        deed: یک دیکشنری حاوی اطلاعات کامل سند.
    Returns:
        یک رشته که نتیجه بررسی را نشان می‌دهد.
    """
    
    # [cite_start]مرحله ۱: آیا مستند مالکیت از نوع سند دفترچه‌ای می‌باشد؟ [cite: 12]
    if deed['document_type'] != 'booklet':
        return "ارسال به کارتابل تخلف بازرسی (نوع سند غیر دفترچه‌ای)" # [cite: 11]
    # [cite_start]مرحله ۲: آیا سابقه درخواست استعلامات در سامانه وجود دارد؟ [cite: 20]
    if deed['has_inquiry_history']:
        # [cite_start]مرحله ۲.۱: آیا از تاریخ درخواست استعلام تا تنظیم سند بیش از ۲۱ روز گذشته است؟ [cite: 34]
        if (deed['deed_date'] - deed['inquiry_date']).days > 21:
            # اگر بله، به مرحله ۳ بروید
            pass
        else:
            # اگر خیر، به بخش "بررسی متن سند" بروید
            return analyze_text_section(deed)
            
    # [cite_start]مرحله ۳: آیا در تنظیم سند از قانون تسهیل استفاده شده است؟ [cite: 32]
    if not deed['uses_tashil_law']:
        # اگر خیر، به بخش "بررسی متن سند" بروید
        return analyze_text_section(deed)
    # [cite_start]مرحله ۴ (تحلیل متن با هوش مصنوعی): آیا تعهدات تضامنی طرفین مطابق قانون تسهیل در متن سند قید شده است؟ [cite: 25]
    prompt_joint_liabilities = f"""
        متن سند زیر را با دقت تحلیل کن. آیا در این متن، بندی مبنی بر "تعهدات تضامنی طرفین مطابق قانون تسهیل" یا عبارات مشابهی که به مسئولیت مشترک خریدار و فروشنده اشاره دارد، وجود دارد؟
        فقط با "بله" یا "خیر" پاسخ بده.
        متن سند:
        ---
        {deed['text']}
        ---
    """
    if not analyze_deed_text_with_llm(deed['text'], prompt_joint_liabilities):
        return "ارسال به کارتابل تخلف بازرسی (عدم وجود تعهدات تضامنی قانون تسهیل)" # [cite: 11]
        
    # در تمام حالات دیگر به بخش "بررسی متن سند" بروید
    return analyze_text_section(deed)
def analyze_text_section(deed: dict) -> str:
    """
    این تابع بخش "بررسی متن سند" فلوچارت را پیاده‌سازی می‌کند.
    """
    # [cite_start]مرحله ۵ (تحلیل متن با هوش مصنوعی): آیا از متن سند مسکونی بودن کاربری یا عرصه و اعیان بودن استنباط می‌شود؟ [cite: 38]
    prompt_residential_use = f"""
        متن سند زیر را با دقت تحلیل کن. آیا از محتوای آن می‌توان استنباط کرد که ملک مورد معامله کاربری "مسکونی" دارد یا دارای "عرصه و اعیان" است؟ به کلماتی مانند "آپارتمان"، "خانه"، "مسکونی"، "عرصه"، "اعیان" و موارد مشابه توجه کن.
        فقط با "بله" یا "خیر" پاسخ بده.
        متن سند:
        ---
        {deed['text']}
        ---
    """
    if analyze_deed_text_with_llm(deed['text'], prompt_residential_use):
        return "ارسال به کارتابل تخلف بازرسی (استنباط کاربری مسکونی از متن)" # [cite: 41]
    # [cite_start]مرحله ۶ (تحلیل متن با هوش مصنوعی): آیا در متن سند به استعلام از یک مرجع مورد قبول اشاره شده است؟ [cite: 31]
    prompt_inquiry_reference = f"""
        متن سند زیر را با دقت تحلیل کن. آیا در متن به اخذ استعلام از یک مرجع رسمی و قابل قبول (مانند شهرداری، جهاد کشاورزی، اداره ثبت) اشاره شده است؟ به عباراتی مانند "به استناد پاسخ استعلام شماره ..." یا "با توجه به نامه اداره ..." توجه کن.
        فقط با "بله" یا "خیر" پاسخ بده.
        متن سند:
        ---
        {deed['text']}
        ---
    """
    if analyze_deed_text_with_llm(deed['text'], prompt_inquiry_reference):
        # [cite_start]مرحله ۶.۱: اگر پاسخ استعلام در دسترس است آیا ایراد در پاسخ استعلام از مرجع قابل قبول قید شده است؟ [cite: 17]
        # این داده باید از خارج از متن سند تهیه شود.
        if deed['inquiry_response_has_issue']:
            return "ارسال به کارتابل تخلف بازرسی (ایراد در پاسخ استعلام)" # [cite: 41]
    # [cite_start]مرحله ۷ (تحلیل متن با هوش مصنوعی): آیا متن سند به چیزی مشروط شده است؟ [cite: 40]
    prompt_conditionality = f"""
        متن سند زیر را با دقت تحلیل کن. آیا انتقال مالکیت یا انجام معامله به شرط یا شروطی در آینده موکول شده است؟ برای مثال، آیا در متن عبارتی وجود دارد که بگوید "خریدار متعهد است در آینده کاری را انجام دهد" یا "فروشنده شرط کرده است که ...".
        فقط با "بله" یا "خیر" پاسخ بده.
        متن سند:
        ---
        {deed['text']}
        ---
    """
    if analyze_deed_text_with_llm(deed['text'], prompt_conditionality):
        return "ارسال به کارتابل تخلف بازرسی (مشروط بودن معامله)" # [cite: 41]
        
    return "پایان (تخلفی شناسایی نشد)" # [cite: 13]

#------------------------------------------------------------------
# نمونه داده سند و اجرای الگوریتم
#------------------------------------------------------------------
# این یک نمونه متن سند است که می‌توان از آن برای تست استفاده کرد.
sample_deed_text = """
این سند قطعی غیرمنقول به شماره ثبت ۱۲۳۴۵ در تاریخ ۱۴۰۳/۰۶/۰۷ تنظیم گردید. 
فروشنده، آقای احمد احمدی، شش دانگ یک قطعه زمین با کاربری زراعی به مساحت ۵۰۰ متر مربع واقع در قریه ABC را به خریدار، خانم سارا سارایی، منتقل نمود. 
این معامله با استناد به ماده ۱۰ قانون مدنی و با رعایت کلیه شرایط قانونی صورت پذیرفت. طرفین ضمن عقد خارج لازم، کلیه خیارات از جمله خیار غبن را از خود ساقط نمودند. 
خریدار متعهد گردید مبلغ باقی‌مانده ثمن معامله را ظرف مدت سه ماه آینده به فروشنده پرداخت نماید، در غیر این صورت فروشنده حق فسخ معامله را خواهد داشت.
این سند به استناد پاسخ استعلام شماره ۱۱-الف مورخ ۱۴۰۳/۰۵/۱۰ از اداره ثبت اسناد و املاک تنظیم شده است.
"""
# تعریف یک سند نمونه بر اساس فیلدهای مورد نیاز فلوچارت
sample_deed = {
    "document_type": "booklet",  # نوع سند: دفترچه‌ای
    "has_inquiry_history": True, # آیا سابقه استعلام دارد؟
    "inquiry_date": datetime.date(2025, 7, 20), # تاریخ استعلام
    "deed_date": datetime.date(2025, 8, 15), # تاریخ تنظیم سند
    "uses_tashil_law": False, # آیا از قانون تسهیل استفاده شده؟
    "inquiry_response_has_issue": False, # آیا پاسخ استعلام ایراد دارد؟
    "text": sample_deed_text # متن کامل سند
}
# اجرای تابع اصلی و چاپ نتیجه
if __name__ == "__main__":
    result = check_deed_for_violations(sample_deed)
    print(f"\n\nنتیجه نهایی برای سند نمونه: {result}")